name: "🐳 Build & 🚚 Release"

on:
  push:
    branches:
      - master

jobs:
  build:
    name: "🐳 Build"
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
      packages: "write"
    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure sccache
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_RESULTS_URL', process.env.ACTIONS_RESULTS_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.7

      - name: Build crate
        run: cargo build --release

      - id: auth
        name: Autenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          token_format: "access_token"
          workload_identity_provider: "projects/953907026294/locations/global/workloadIdentityPools/kontestis-actions/providers/kontestis-provider"
          service_account: "github-actions@speedy-baton-368023.iam.gserviceaccount.com"

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GCP container registry
        uses: docker/login-action@v2
        with:
          registry: eu.gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Login to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          tags: eu.gcr.io/speedy-baton-368023/kontestis-evaluator-rs:latest,ghcr.io/itklubbozolagan/kontestis-evaluator-rs:latest
  release:
    name: "🚚 Release"
    runs-on: ubuntu-latest
    needs: ["build"]
    steps:
      - name: "Set up kubectl"
        uses: azure/setup-kubectl@v3

      - name: "Copy kubernetes config"
        run: "mkdir ~/.kube && echo '${{ secrets.KUBE_CONFIG }}' | base64 -d > ~/.kube/config && KUBECONFIG=~/.kube/config"

      - name: "Rollout an application update"
        run: "kubectl rollout restart deployment evaluator-staging -n kontestis"

